---
layout:     post
title:      "CSRF攻击"
subtitle:   "web安全知识系列～"
date:       2018-06-02
author:     "Jeff"
header-img: "img/post-bg-2015.jpg"
tags:
    - JavaScript
    - WEB安全
---

## CSRF

**跨站请求伪造**（Cross-site request forgery）

> 站请求攻击，简单地说，是攻击者通过一些技术手段欺骗用户的浏览器去访问一个自己曾经认证过的网站并执行一些操作（如发邮件，发消息，甚至财产操作如转账和购买商品）。由于浏览器曾经认证过，所以被访问的网站会认为是真正的用户操作而去执行。这利用了web中用户身份验证的一个漏洞：**简单的身份验证只能保证请求发自某个用户的浏览器，却不能保证请求本身是用户自愿发出的**。

XSS的目的是获取用户的身份信息，攻击者窃取到的是用户的身份（session/cookie），而CSRF则是利用用户当前的身份去做一些未经过授权的操作。

维基百科上有一个很经典例子

假如一家银行用以执行转账操作的URL地址如下： 
```
<http://www.examplebank.com/withdraw?account=AccoutName&amount=1000&for=PayeeName>
```

那么，一个恶意攻击者可以在另一个网站上放置如下代码： 
```
<img src="http://www.examplebank.com/withdraw?account=Alice&amount=1000&for=Badman" >
```

如果有账户名为Alice的用户访问了恶意站点，而她之前刚访问过银行不久，登录信息尚未过期，那么她就会损失1000资金。

## 防御措施

### 检查Referer字段

http头部有一个**Referer**字段，这个字段用以标明请求来源于哪个地址。

假如我们不幸进到攻击者的网站，被强行调用了一个转账的接口。那么这个http请求头部里的**Referer**指向的是攻击者的网站，服务端判定正确的转账域名和**Referer**的域名不同，那么就可以判定是恶意的访问。

但是Referer字段是可以被篡改的，所以这方法存在被绕过的可能。

### 添加校验token

攻击者之所以能利用用户当前的身份去做一些未经过授权的操作，是因为拿到了我们的cookie。那假如我们身份的校验是通过其他的，攻击者无法拿到的东西来实现的呢？

可以在用户登陆时，服务端从session里取出token，返回给客户端。之后用户所有的请求都需要带上这个token，可以放在http请求头部里。

当用户请求转账时，如果服务端从http头部里取不到token，或者token是非法的，那么这个请求就有可能是CSRF攻击～