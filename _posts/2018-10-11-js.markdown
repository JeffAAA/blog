---
layout:     post
title:      "Encoding 和 Encryption 和 Hashing 和 Obfuscation 的区别"
subtitle:   "翻译"
date:       2018-10-11
author:     "Jeff"
header-img: "img/post-bg-2015.jpg"
tags:
    - 加密
---

这篇[文章](https://danielmiessler.com/study/encoding-encryption-hashing-obfuscation/#encoding)很好的描述了编码，加密，散列和混淆之间的区别。所以自己做一次翻译。

#### Encoding（编码）

编码的目的是为了转换数据的格式，以便于被正确的（并且安全的）在不同的系统中使用。例如，二进制的数据通过email来传送，或者在web页面中以特殊字符的形式查看。这个目的不是为了保证信息的安全，而是确保信息能被正确的使用。

编码使用公开可用可用的方案来转换数据的格式，所以它可以轻易的反转，即反编码。

常见的编码方案有**ASSCII**，**UNICODE**，**URL ENCODING**，**BASE64**



#### Encryption（加密）

加密的目的是为了转换数据来保证数据是保密的。例如传递一封只有某人才能读的密信，或者在网络中传递密码。目的是为了确保数据不被任何非预定的接受人所使用，而不是专注于数据的可用性。

加密通过以下的方式转换数据为另一种格式，为了只有指定的人才能把数据转换回去。

他通过使用一个秘钥，结合明文和算法执行加密操作。因此，解密时使用密文，加密算法和密钥来生成明文。

常见的加密算法有**AES**，**BLOWFISH**，**RSA**



#### Hashing（散列）

散列的目的是确保数据的完整性，这样如果数据发生变化，你可以从通过对比散列值来发现。

技术上来讲，散列接受任意的输入值，产生一个具有以下属性的固定长度字符串。

- 同样的输入值，总是会产生同样的输出值
- 多个不同的输入值不应该产生相同的输出值
- 无法从输出值反推算出输入值
- 给出的输入值只要有任何改变，都会反映的输出的hash值当中

散列通常结合授权来使用，用于给给定的消息一个强力的证据表明它是没有被修改的。这是通过对给定的输入值进行散列，然后使用发送方的私钥对hash值进行签名来实现（用私钥加密，生成的即为数字签名）。

当接收者打开信息时，他们可以用发送者的公钥解密数字签名，得到消息的hash值。这时再对消息进行散列，把新的hash值与对方发来的hash值对比。相同则代表消息没有被修改，是完整的。

常见的散列算法有**SHA-3**，**MD5**



#### Obfuscation（混淆）

混淆的目的是为了让数据更难去读懂，通常是为了让数据更难被攻击或者复制。

一个通用的使用场景是混淆源代码，这样逆向工程更难了。